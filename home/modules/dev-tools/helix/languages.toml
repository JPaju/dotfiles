# ------------------------------------------------- Language servers -------------------------------------------------
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 10     # set max completion results len for each group: words, snippets, unicode-input
snippets_first = true
feature_words = true
feature_snippets = true
feature_unicode_input = false

[language-server.scls.environment]
RUST_LOG = "info,simple-completion-langauge-server=info"
LOG_FILE = "/dev/null"


# Helix sends LSP config object to the server in both 'initialize' and 'workspace/didChangeConfiguration' requests
# Thus it can contain configuration for both contexts, see: https://github.com/helix-editor/helix/pull/1684
# Metals configuration options are documented here: https://scalameta.org/metals/docs/integrations/new-editor/#metals-user-configuration

[language-server.metals]
command = "metals"
environment = { "SBT_TPOLECAT_DEV" = "1" }

[language-server.metals.config]
isHttpEnabled = true
icons = "unicode"
metals.autoImportBuild = true
metals.showImplicitArguments = true
metals.showImplicitConversionsAndClasses = true
metals.showInferredType = true
metals.superMethodLensesEnabled = true


[language-server.terraform-ls]
command = "terraform-ls"
args = ["serve", "-log-file", "/dev/null"]


# ----------------------------------------------------- Languages -----------------------------------------------------

[[language]]
name = "css"
formatter = { command = "prettier", args = ["--stdin-filepath ", "dummy.css"] }
auto-format = true
language-servers = ["vscode-css-language-server", "scls"]

[[language]]
name = "docker-compose"
language-servers = [
  "docker-compose-language-server",
  "yaml-language-server",
  "scls",
]

[[language]]
name = "elm"
formatter = { command = "elm-format", args = ["--stdin "] }
auto-format = true

[[language]]
name = "fish"
formatter = { command = "fish_indent" }
auto-format = false
# language-servers = ["fish-lsp"]
language-servers = ["scls"]

[[language]]
name = "hcl"
auto-format = true
formatter = { command = "terraform", args = ["fmt", "-"] }
language-servers = ["terraform-ls", "scls"]

[[language]]
name = "html"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.html"] }
auto-format = true
language-servers = ["vscode-html-language-server", "scls"]

[[language]]
name = "java"
auto-format = true

[[language]]
name = "javascript"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.js"] }
auto-format = true
language-servers = ["typescript-language-server", "scls"]

[[language]]
name = "json"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.json"] }
auto-format = true
language-servers = ["vscode-json-language-server", "scls"]

[[language]]
name = "lua"
auto-format = true

[[language]]
name = "markdown"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.md"] }
auto-format = true
soft-wrap.enable = true
soft-wrap.wrap-at-text-width = true
language-servers = ["marksman", "scls"]

[[language]]
name = "nix"
formatter = { command = "nixfmt", args = ["--width", "120"] }
auto-format = true
language-servers = ["nil", "scls"]

[[language]]
name = "prisma"
auto-format = true
language-servers = ["prisma-language-server", "scls"]

[[language]]
name = "protobuf"
language-servers = ["bufls", "pbkit", "scls"]
formatter = { command = "zsh", args = [
  "-c",
  "clang-format",
  "--assume-filename=dummy.proto",
  "--style=file:$HOME/.config/.clang-format",
] } # In order to use variable expansion, the command must be run through shell, see: https://github.com/helix-editor/helix/issues/5538#issuecomment-1383197516
auto-format = true

[[language]]
name = "python"
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true
language-servers = ["pylsp", "scls"]

[[language]]
name = "scala"
auto-format = true
language-servers = ["metals", "scls"]

[[language]]
name = "scss"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.scss"] }
auto-format = true
language-servers = ["vscode-css-language-server", "scls"]

[[language]]
name = "sql"
formatter = { command = "pg_format --wrap-limit 140" }
auto-format = true
language-servers = ["scls"]

[[language]]
name = "toml"
auto-format = true
language-servers = ["taplo", "scls"]

[[language]]
name = "typescript"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.ts"] }
auto-format = true
language-servers = ["typescript-language-server", "scls"]

[[language]]
name = "xml"
auto-format = true
language-servers = ["vscode-html-language-server", "scls"]

[[language]]
name = "yaml"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.yaml"] }
auto-format = true
language-servers = ["yaml-language-server", "ansible-language-server", "scls"]
